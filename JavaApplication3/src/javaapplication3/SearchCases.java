/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication3;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.ArrayList;

/**
 *
 * @author alhammadi
 */
public class SearchCases extends javax.swing.JFrame {

    /**
     * Creates new form SearchCriminal
     */
    myDBCon db;
    ResultSet Cases; 
    ResultSet Criminals; ArrayList<Integer> CriminalsNumbers = new ArrayList<>();
    ResultSet Officers; ArrayList<Integer> OfficersNumbers = new ArrayList<>();
    ResultSet Crimes; ArrayList<Integer> CrimesNumbers = new ArrayList<>();
    ResultSet Stations; ArrayList<Integer> StationsNumbers = new ArrayList<>();
    public SearchCases(myDBCon db) {
        this.db = db;
        try {
            
            Cases = db.executeQuery("SELECT CASEID FROM CASE");
            Criminals = db.executeQuery("SELECT criminalID, fname, lname FROM criminal order by criminalID");
            Officers = db.executeQuery("SELECT officerID, fname, lname FROM Officer order by officerID");
            Crimes = db.executeQuery("SELECT crimeID, name from CRIME order by crimeID");
            Stations = db.executeQuery("SELECT stationID, address, state from POLICE_STATION order by stationID");
            initComponents();
            while(Cases.next())
            {
                jComboBox1.addItem(""+Cases.getInt("CASEID"));
                
            }
            while(Criminals.next())
            {
                jComboBox2.addItem(Criminals.getString("fname") + " " + Criminals.getString("lname"));
                CriminalsNumbers.add(Criminals.getInt("criminalID"));
            }
            while(Officers.next())
            {
                jComboBox3.addItem(Officers.getString("fname") + " " + Officers.getString("lname"));
                OfficersNumbers.add(Officers.getInt("officerID"));
            }
            while(Crimes.next())
            {
                jComboBox4.addItem(Crimes.getString("name"));
                CrimesNumbers.add(Crimes.getInt("crimeID"));
                
            }
            while(Stations.next())
            {
                jComboBox5.addItem(Stations.getString("address") + " - " + Stations.getString("state"));
                StationsNumbers.add(Stations.getInt("stationID"));
            }
        } catch (SQLException ex)
        {
            Logger.getLogger(SearchCases.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error Obtaining Information from the Database...");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Criminals");

        jLabel2.setText("Officers");

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Crimes");

        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Case ID");

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel7.setText("Query Cases By Attribute");

        jLabel5.setText("Stations");

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton5))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton4))))))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel7)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        
        
            String SQL = "SELECT * FROM case WHERE CASEID = '" + jComboBox1.getSelectedItem() + "' ORDER BY caseID ASC";
            
            int size = 0;
            try {
                ResultSet rs = db.executeQuery(SQL);
                
                while (rs.next()) {
                    size++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(SearchCriminal.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(size == 0)
            {
                JOptionPane.showMessageDialog(null, "Result set is empty");
            }
            else
            {
                try {
                    new DisplayCases(db, SQL).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SearchCases.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String SQL = "SELECT * FROM CASE WHERE criminalID = " + CriminalsNumbers.get(jComboBox2.getSelectedIndex());
        int size = 0;
        try {
            ResultSet rs = db.executeQuery(SQL);
            while (rs.next()) {
                size++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(SearchCriminal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(size == 0)
        {
            JOptionPane.showMessageDialog(null, "Result set is empty");
        }
        else
        {
            try {
                    new DisplayCases(db, SQL).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SearchCases.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String SQL = "SELECT * FROM CASE WHERE officerID = " + OfficersNumbers.get(jComboBox3.getSelectedIndex());
        int size = 0;
        try {
            ResultSet rs = db.executeQuery(SQL);

            while (rs.next()) {
                size++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(SearchCriminal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(size == 0)
        {
            JOptionPane.showMessageDialog(null, "Result set is empty");
        }
        else
        {
          try {
                    new DisplayCases(db, SQL).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SearchCases.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String SQL = "SELECT * FROM CASE WHERE crimeID = " + CrimesNumbers.get(jComboBox4.getSelectedIndex());
        int size = 0;
        try {
            ResultSet rs = db.executeQuery(SQL);

            while (rs.next()) {
                size++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(SearchCriminal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(size == 0)
        {
            JOptionPane.showMessageDialog(null, "Result set is empty");
        }
        else
        {
            try {
                    new DisplayCases(db, SQL).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SearchCases.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String SQL = "SELECT * FROM CASE WHERE stationID = " + StationsNumbers.get(jComboBox5.getSelectedIndex());
        int size = 0;
        try {
            ResultSet rs = db.executeQuery(SQL);

            while (rs.next()) {
                size++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(SearchCriminal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(size == 0)
        {
            JOptionPane.showMessageDialog(null, "Result set is empty");
        }
        else
        {
           try {
                    new DisplayCases(db, SQL).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SearchCases.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
