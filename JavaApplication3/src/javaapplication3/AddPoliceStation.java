/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication3;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;

/**
 *
 * @author theag
 */
public class AddPoliceStation extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private myDBCon db;
    private ResultSet rs;
    public AddPoliceStation(myDBCon db) throws SQLException {
        this.db = db;
        initComponents();
        clearErrorLabels();
        resetLabels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StationIDLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        StationIDLabel3 = new javax.swing.JLabel();
        StationIDLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        StateText = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        StationIDText = new javax.swing.JTextPane();
        AddStationButton = new javax.swing.JButton();
        StationIDLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AddressText = new javax.swing.JTextPane();
        AddressError = new javax.swing.JLabel();
        StationIDError = new javax.swing.JLabel();
        StateError = new javax.swing.JLabel();
        HeadIDCmbBox = new javax.swing.JComboBox<>();
        HeadIDError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        StationIDLabel2.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        StationIDLabel2.setText("Availabe HeadID:");

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        jLabel1.setText("Add Police Station");

        StationIDLabel3.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        StationIDLabel3.setText("State:");

        StationIDLabel.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        StationIDLabel.setText("Station ID:");

        jScrollPane4.setViewportView(StateText);

        jScrollPane1.setViewportView(StationIDText);

        AddStationButton.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        AddStationButton.setText("ADD");
        AddStationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStationButtonActionPerformed(evt);
            }
        });

        StationIDLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        StationIDLabel1.setText("Address:");

        jScrollPane2.setViewportView(AddressText);

        AddressError.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        AddressError.setForeground(new java.awt.Color(255, 0, 0));
        AddressError.setText("ERROR LABEL");

        StationIDError.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        StationIDError.setForeground(new java.awt.Color(255, 0, 0));
        StationIDError.setText("ERROR LABEL");

        StateError.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        StateError.setForeground(new java.awt.Color(255, 0, 0));
        StateError.setText("ERROR LABEL");

        HeadIDError.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        HeadIDError.setForeground(new java.awt.Color(255, 0, 0));
        HeadIDError.setText("ERROR LABEL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(AddStationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(196, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(167, 167, 167))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StationIDLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StationIDLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HeadIDCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StationIDLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StationIDLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StationIDError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddressError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StateError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HeadIDError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StationIDLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StationIDError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StationIDLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddressError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StationIDLabel2)
                    .addComponent(HeadIDCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HeadIDError))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StationIDLabel3)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StateError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(AddStationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }
    
    void clearErrorLabels()
    {
        StationIDError.setText("");
        AddressError.setText("");
        StateError.setText("");
        HeadIDError.setText("");
    }
     
    boolean isValidData()
    {
        boolean flag = true;
        //check for station ID (empty, integer, and grater than 4)
        if(StationIDText.getText().trim().isEmpty() ||  !isInteger(StationIDText.getText().trim()))
        {
            if(StationIDText.getText().trim().isEmpty())
            {
                StationIDError.setText("This field cannot be empty");
            }
            else if(!isInteger(StationIDText.getText().trim()))
            {
                StationIDError.setText("This field must be integer");
            }
            
            flag = false;
        }
        if(StationIDText.getText().trim().length() > 4)
        {
            StationIDError.setText("The length must be at most than 4 digits");
            flag = false;
        }
        
        //check for address (empty and greater than 30)
        if(AddressText.getText().trim().isEmpty())
        {
            AddressError.setText("This field cannot be empty");
            flag = false;
        }
        if(AddressText.getText().trim().length() > 30)
        {
            AddressError.setText("The length must at most than 30 characters");
            flag = false;
        }
        
        //check for headID (empty)
        if(HeadIDCmbBox.getItemCount() == 0)
        {
            HeadIDError.setText("There are no head officers to be hired at the new station");
            flag = false;
        }
        
        //check for state (empty, greater than 30)
        if(StateText.getText().trim().isEmpty() || StateText.getText().trim().length() > 30 )
        {
            if(StateText.getText().trim().isEmpty())
            {
            StateError.setText("This field cannot be empty");
            }
            else if(StateText.getText().trim().length() > 30)
            {
            StateError.setText("The length must be at most 30 characters");            
            }
            flag = false;
        }

        
        return flag;
    }
    
    void resetLabels() throws SQLException
    {
        rs = db.executeQuery("select * from Officer where rank = 'Captain' and OfficerID not in(select HeadID from police_station where officerID = headID) order by OfficerID ASC");
        while(rs.next())
        {
            HeadIDCmbBox.addItem(rs.getString("officerID"));
        }
        StationIDText.setText("");
        AddressText.setText("");
        StateText.setText(""); 
    }
    
    private void AddStationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStationButtonActionPerformed
        //validate data
        clearErrorLabels();
        if(isValidData())
        {
            try {
                this.db.setupPrepStatement("INSERT INTO police_station (StationID, Address, HeadID, State) values(?,?,?,?)");
                this.db.getPrepStatement().setInt(1,Integer.parseInt(StationIDText.getText()));
                this.db.getPrepStatement().setString(2,AddressText.getText());
                this.db.getPrepStatement().setInt(3,Integer.parseInt(HeadIDCmbBox.getSelectedItem().toString()));
                this.db.getPrepStatement().setString(4,StateText.getText());
                int result = db.executePrepUpdate();
                if(result > 0)
                {
                   javax.swing.JLabel label = new javax.swing.JLabel("New Police Station added successfully.");
                    label.setFont(new java.awt.Font("Lucida Bright", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE); 
                }
                resetLabels();
            } catch (SQLException ex) {
                Logger.getLogger(AddPoliceStation.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else
        {
            
        }
    }//GEN-LAST:event_AddStationButtonActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddStationButton;
    private javax.swing.JLabel AddressError;
    private javax.swing.JTextPane AddressText;
    private javax.swing.JComboBox<String> HeadIDCmbBox;
    private javax.swing.JLabel HeadIDError;
    private javax.swing.JLabel StateError;
    private javax.swing.JTextPane StateText;
    private javax.swing.JLabel StationIDError;
    private javax.swing.JLabel StationIDLabel;
    private javax.swing.JLabel StationIDLabel1;
    private javax.swing.JLabel StationIDLabel2;
    private javax.swing.JLabel StationIDLabel3;
    private javax.swing.JTextPane StationIDText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
